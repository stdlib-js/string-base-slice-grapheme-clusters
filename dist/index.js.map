{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nextGraphemeClusterBreak = require( '@stdlib/string-next-grapheme-cluster-break' );\nvar numGraphemeClusters = require( '@stdlib/string-num-grapheme-clusters' );\nvar max = require( '@stdlib/math-base-special-fast-max' );\n\n\n// MAIN //\n\n/**\n* Slices a string based on grapheme cluster (i.e., user-perceived character) indices.\n*\n* @param {string} str - input string\n* @param {integer} start - the `ith` grapheme cluster to start a slice (inclusive)\n* @param {integer} end - the `jth` grapheme cluster to end a slice (exclusive)\n* @returns {string} output string\n*\n* @example\n* var out = sliceGraphemeClusters( 'Hello World', 0, 5 );\n* // returns 'Hello'\n*\n* out = sliceGraphemeClusters( '\uD83D\uDC4B\uD83D\uDC4B\uD83D\uDC4B', 0, 2 );\n* // returns '\uD83D\uDC4B\uD83D\uDC4B'\n*\n* out = sliceGraphemeClusters( '\u0905\u0928\u0941\u091A\u094D\u091B\u0947\u0926', 1, 3 );\n* // returns '\u0928\u0941\u091A\u094D'\n*\n* out = sliceGraphemeClusters( 'Hello World', -5, -1 );\n* // returns 'Worl'\n*/\nfunction sliceGraphemeClusters( str, start, end ) {\n\tvar numClusters;\n\tvar result;\n\tvar idx;\n\tvar brk;\n\tvar i;\n\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\tnumClusters = numGraphemeClusters( str );\n\tif ( start < 0 ) {\n\t\tstart = max( start + numClusters, 0 );\n\t}\n\tif ( end < 0 ) {\n\t\tend = max( end + numClusters, 0 );\n\t}\n\tif ( start >= numClusters || start >= end ) {\n\t\treturn '';\n\t}\n\tif ( end > numClusters ) {\n\t\tend = numClusters;\n\t}\n\tresult = '';\n\tidx = 0;\n\ti = 0;\n\twhile ( idx < str.length ) {\n\t\tbrk = nextGraphemeClusterBreak( str, idx );\n\t\tif ( brk === -1 ) {\n\t\t\tbrk = str.length;\n\t\t}\n\t\tif ( i >= start && i < end ) {\n\t\t\tresult += str.substring( idx, brk );\n\t\t}\n\t\tidx = brk;\n\t\ti += 1;\n\t\tif ( i >= end ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sliceGraphemeClusters;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Slice a string based on grapheme cluster (i.e., user-perceived character) indices.\n*\n* @module @stdlib/string-base-slice-grapheme-clusters\n*\n* @example\n* var sliceGraphemeClusters = require( '@stdlib/string-base-slice-grapheme-clusters' );\n*\n* var out = sliceGraphemeClusters( 'Hello World', 0, 5 );\n* // returns 'Hello'\n*\n* out = sliceGraphemeClusters( '\uD83D\uDC4B\uD83D\uDC4B\uD83D\uDC4B', 0, 2 );\n* // returns '\uD83D\uDC4B\uD83D\uDC4B'\n*\n* out = sliceGraphemeClusters( '\u0905\u0928\u0941\u091A\u094D\u091B\u0947\u0926', 1, 3 );\n* // returns '\u0928\u0941\u091A\u094D'\n*\n* out = sliceGraphemeClusters( 'Hello World', -5, -1 );\n* // returns 'Worl'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAA2B,QAAS,4CAA6C,EACjFC,EAAsB,QAAS,sCAAuC,EACtEC,EAAM,QAAS,oCAAqC,EA0BxD,SAASC,EAAuBC,EAAKC,EAAOC,EAAM,CACjD,IAAIC,EACAC,EACAC,EACAC,EACAC,EAYJ,GAVKP,IAAQ,KAGbG,EAAcN,EAAqBG,CAAI,EAClCC,EAAQ,IACZA,EAAQH,EAAKG,EAAQE,EAAa,CAAE,GAEhCD,EAAM,IACVA,EAAMJ,EAAKI,EAAMC,EAAa,CAAE,GAE5BF,GAASE,GAAeF,GAASC,GACrC,MAAO,GAQR,IANKA,EAAMC,IACVD,EAAMC,GAEPC,EAAS,GACTC,EAAM,EACNE,EAAI,EACIF,EAAML,EAAI,SACjBM,EAAMV,EAA0BI,EAAKK,CAAI,EACpCC,IAAQ,KACZA,EAAMN,EAAI,QAENO,GAAKN,GAASM,EAAIL,IACtBE,GAAUJ,EAAI,UAAWK,EAAKC,CAAI,GAEnCD,EAAMC,EACNC,GAAK,EACA,EAAAA,GAAKL,KAAV,CAID,OAAOE,CACR,CAKAT,EAAO,QAAUI,ICrDjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "nextGraphemeClusterBreak", "numGraphemeClusters", "max", "sliceGraphemeClusters", "str", "start", "end", "numClusters", "result", "idx", "brk", "i", "main"]
}
